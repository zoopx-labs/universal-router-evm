{"abi":[],"bytecode":{"object":"0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220842426a919d01e7fddfc85c88ce29d34a915847b09592a27f0f888f7243a6b5d64736f6c634300081a0033","sourceMap":"521:3729:20:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x5f80fdfea2646970667358221220842426a919d01e7fddfc85c88ce29d34a915847b09592a27f0f888f7243a6b5d64736f6c634300081a0033","sourceMap":"521:3729:20:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=node_modules/@openzeppelin/contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=node_modules/@openzeppelin/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"node_modules/@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4","urls":["bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e","dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631","urls":["bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59","dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":6871,"exportedSymbols":{"MessageHashUtils":[6870],"Strings":[6209]},"nodeType":"SourceUnit","src":"123:4128:20","nodes":[{"id":6786,"nodeType":"PragmaDirective","src":"123:24:20","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":6788,"nodeType":"ImportDirective","src":"149:39:20","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":6871,"sourceUnit":6210,"symbolAliases":[{"foreign":{"id":6787,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"157:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6870,"nodeType":"ContractDefinition","src":"521:3729:20","nodes":[{"id":6799,"nodeType":"FunctionDefinition","src":"1247:433:20","nodes":[],"body":{"id":6798,"nodeType":"Block","src":"1339:341:20","nodes":[],"statements":[{"AST":{"nativeSrc":"1374:300:20","nodeType":"YulBlock","src":"1374:300:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:20","nodeType":"YulLiteral","src":"1395:4:20","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:20","nodeType":"YulLiteral","src":"1401:34:20","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:20","nodeType":"YulIdentifier","src":"1388:6:20"},"nativeSrc":"1388:48:20","nodeType":"YulFunctionCall","src":"1388:48:20"},"nativeSrc":"1388:48:20","nodeType":"YulExpressionStatement","src":"1388:48:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:20","nodeType":"YulLiteral","src":"1497:4:20","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:20","nodeType":"YulIdentifier","src":"1503:11:20"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:20","nodeType":"YulIdentifier","src":"1490:6:20"},"nativeSrc":"1490:25:20","nodeType":"YulFunctionCall","src":"1490:25:20"},"nativeSrc":"1490:25:20","nodeType":"YulExpressionStatement","src":"1490:25:20"},{"nativeSrc":"1569:31:20","nodeType":"YulAssignment","src":"1569:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:20","nodeType":"YulLiteral","src":"1589:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:20","nodeType":"YulLiteral","src":"1595:4:20","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:20","nodeType":"YulIdentifier","src":"1579:9:20"},"nativeSrc":"1579:21:20","nodeType":"YulFunctionCall","src":"1579:21:20"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:20","nodeType":"YulIdentifier","src":"1569:6:20"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":6795,"isOffset":false,"isSlot":false,"src":"1569:6:20","valueSize":1},{"declaration":6792,"isOffset":false,"isSlot":false,"src":"1503:11:20","valueSize":1}],"flags":["memory-safe"],"id":6797,"nodeType":"InlineAssembly","src":"1349:325:20"}]},"documentation":{"id":6790,"nodeType":"StructuredDocumentation","src":"552:690:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:20","parameters":{"id":6793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6792,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:20","nodeType":"VariableDeclaration","scope":6799,"src":"1279:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:20"},"returnParameters":{"id":6796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6795,"mutability":"mutable","name":"digest","nameLocation":"1331:6:20","nodeType":"VariableDeclaration","scope":6799,"src":"1323:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:20"},"scope":6870,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6825,"nodeType":"FunctionDefinition","src":"2171:229:20","nodes":[],"body":{"id":6824,"nodeType":"Block","src":"2257:143:20","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":6816,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"2366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:20","memberName":"length","nodeType":"MemberAccess","src":"2366:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6814,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2349:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$6209_$","typeString":"type(library Strings)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4921,"src":"2349:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6812,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:20","typeDescriptions":{}}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6820,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"2384:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6808,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:20","typeDescriptions":{}}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:20","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:20","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6807,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6806,"id":6823,"nodeType":"Return","src":"2267:126:20"}]},"documentation":{"id":6800,"nodeType":"StructuredDocumentation","src":"1686:480:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:20","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"message","nameLocation":"2216:7:20","nodeType":"VariableDeclaration","scope":6825,"src":"2203:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6801,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:20"},"returnParameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6825,"src":"2248:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:20"},"scope":6870,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6845,"nodeType":"FunctionDefinition","src":"2743:191:20","nodes":[],"body":{"id":6844,"nodeType":"Block","src":"2854:80:20","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":6838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":6839,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"2910:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6840,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"2921:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6836,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6835,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6834,"id":6843,"nodeType":"Return","src":"2864:63:20"}]},"documentation":{"id":6826,"nodeType":"StructuredDocumentation","src":"2406:332:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:20","parameters":{"id":6831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"validator","nameLocation":"2792:9:20","nodeType":"VariableDeclaration","scope":6845,"src":"2784:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6827,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6830,"mutability":"mutable","name":"data","nameLocation":"2816:4:20","nodeType":"VariableDeclaration","scope":6845,"src":"2803:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6829,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:20"},"returnParameters":{"id":6834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6845,"src":"2845:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:20"},"scope":6870,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6857,"nodeType":"FunctionDefinition","src":"3074:358:20","nodes":[],"body":{"id":6856,"nodeType":"Block","src":"3216:216:20","nodes":[],"statements":[{"AST":{"nativeSrc":"3251:175:20","nodeType":"YulBlock","src":"3251:175:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:20","nodeType":"YulLiteral","src":"3272:4:20","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:20","nodeType":"YulLiteral","src":"3278:10:20","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:20","nodeType":"YulIdentifier","src":"3265:6:20"},"nativeSrc":"3265:24:20","nodeType":"YulFunctionCall","src":"3265:24:20"},"nativeSrc":"3265:24:20","nodeType":"YulExpressionStatement","src":"3265:24:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:20","nodeType":"YulLiteral","src":"3309:4:20","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:20","nodeType":"YulLiteral","src":"3319:2:20","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:20","nodeType":"YulIdentifier","src":"3323:9:20"}],"functionName":{"name":"shl","nativeSrc":"3315:3:20","nodeType":"YulIdentifier","src":"3315:3:20"},"nativeSrc":"3315:18:20","nodeType":"YulFunctionCall","src":"3315:18:20"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:20","nodeType":"YulIdentifier","src":"3302:6:20"},"nativeSrc":"3302:32:20","nodeType":"YulFunctionCall","src":"3302:32:20"},"nativeSrc":"3302:32:20","nodeType":"YulExpressionStatement","src":"3302:32:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:20","nodeType":"YulLiteral","src":"3354:4:20","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:20","nodeType":"YulIdentifier","src":"3360:11:20"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:20","nodeType":"YulIdentifier","src":"3347:6:20"},"nativeSrc":"3347:25:20","nodeType":"YulFunctionCall","src":"3347:25:20"},"nativeSrc":"3347:25:20","nodeType":"YulExpressionStatement","src":"3347:25:20"},{"nativeSrc":"3385:31:20","nodeType":"YulAssignment","src":"3385:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:20","nodeType":"YulLiteral","src":"3405:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:20","nodeType":"YulLiteral","src":"3411:4:20","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:20","nodeType":"YulIdentifier","src":"3395:9:20"},"nativeSrc":"3395:21:20","nodeType":"YulFunctionCall","src":"3395:21:20"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:20","nodeType":"YulIdentifier","src":"3385:6:20"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":6853,"isOffset":false,"isSlot":false,"src":"3385:6:20","valueSize":1},{"declaration":6850,"isOffset":false,"isSlot":false,"src":"3360:11:20","valueSize":1},{"declaration":6848,"isOffset":false,"isSlot":false,"src":"3323:9:20","valueSize":1}],"flags":["memory-safe"],"id":6855,"nodeType":"InlineAssembly","src":"3226:200:20"}]},"documentation":{"id":6846,"nodeType":"StructuredDocumentation","src":"2940:129:20","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:20","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"validator","nameLocation":"3132:9:20","nodeType":"VariableDeclaration","scope":6857,"src":"3124:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6847,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6850,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:20","nodeType":"VariableDeclaration","scope":6857,"src":"3151:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:20"},"returnParameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"digest","nameLocation":"3208:6:20","nodeType":"VariableDeclaration","scope":6857,"src":"3200:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:20"},"scope":6870,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6869,"nodeType":"FunctionDefinition","src":"3874:374:20","nodes":[],"body":{"id":6868,"nodeType":"Block","src":"3983:265:20","nodes":[],"statements":[{"AST":{"nativeSrc":"4018:224:20","nodeType":"YulBlock","src":"4018:224:20","statements":[{"nativeSrc":"4032:22:20","nodeType":"YulVariableDeclaration","src":"4032:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:20","nodeType":"YulLiteral","src":"4049:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:20","nodeType":"YulIdentifier","src":"4043:5:20"},"nativeSrc":"4043:11:20","nodeType":"YulFunctionCall","src":"4043:11:20"},"variables":[{"name":"ptr","nativeSrc":"4036:3:20","nodeType":"YulTypedName","src":"4036:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:20","nodeType":"YulIdentifier","src":"4074:3:20"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:20","nodeType":"YulLiteral","src":"4079:10:20","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:20","nodeType":"YulIdentifier","src":"4067:6:20"},"nativeSrc":"4067:23:20","nodeType":"YulFunctionCall","src":"4067:23:20"},"nativeSrc":"4067:23:20","nodeType":"YulExpressionStatement","src":"4067:23:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:20","nodeType":"YulIdentifier","src":"4114:3:20"},{"kind":"number","nativeSrc":"4119:4:20","nodeType":"YulLiteral","src":"4119:4:20","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:20","nodeType":"YulIdentifier","src":"4110:3:20"},"nativeSrc":"4110:14:20","nodeType":"YulFunctionCall","src":"4110:14:20"},{"name":"domainSeparator","nativeSrc":"4126:15:20","nodeType":"YulIdentifier","src":"4126:15:20"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:20","nodeType":"YulIdentifier","src":"4103:6:20"},"nativeSrc":"4103:39:20","nodeType":"YulFunctionCall","src":"4103:39:20"},"nativeSrc":"4103:39:20","nodeType":"YulExpressionStatement","src":"4103:39:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:20","nodeType":"YulIdentifier","src":"4166:3:20"},{"kind":"number","nativeSrc":"4171:4:20","nodeType":"YulLiteral","src":"4171:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:20","nodeType":"YulIdentifier","src":"4162:3:20"},"nativeSrc":"4162:14:20","nodeType":"YulFunctionCall","src":"4162:14:20"},{"name":"structHash","nativeSrc":"4178:10:20","nodeType":"YulIdentifier","src":"4178:10:20"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:20","nodeType":"YulIdentifier","src":"4155:6:20"},"nativeSrc":"4155:34:20","nodeType":"YulFunctionCall","src":"4155:34:20"},"nativeSrc":"4155:34:20","nodeType":"YulExpressionStatement","src":"4155:34:20"},{"nativeSrc":"4202:30:20","nodeType":"YulAssignment","src":"4202:30:20","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:20","nodeType":"YulIdentifier","src":"4222:3:20"},{"kind":"number","nativeSrc":"4227:4:20","nodeType":"YulLiteral","src":"4227:4:20","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:20","nodeType":"YulIdentifier","src":"4212:9:20"},"nativeSrc":"4212:20:20","nodeType":"YulFunctionCall","src":"4212:20:20"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:20","nodeType":"YulIdentifier","src":"4202:6:20"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":6865,"isOffset":false,"isSlot":false,"src":"4202:6:20","valueSize":1},{"declaration":6860,"isOffset":false,"isSlot":false,"src":"4126:15:20","valueSize":1},{"declaration":6862,"isOffset":false,"isSlot":false,"src":"4178:10:20","valueSize":1}],"flags":["memory-safe"],"id":6867,"nodeType":"InlineAssembly","src":"3993:249:20"}]},"documentation":{"id":6858,"nodeType":"StructuredDocumentation","src":"3438:431:20","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:20","parameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:20","nodeType":"VariableDeclaration","scope":6869,"src":"3899:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:20","nodeType":"VariableDeclaration","scope":6869,"src":"3924:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:20"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"digest","nameLocation":"3975:6:20","nodeType":"VariableDeclaration","scope":6869,"src":"3967:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:20"},"scope":6870,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":6789,"nodeType":"StructuredDocumentation","src":"190:330:20","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[6870],"name":"MessageHashUtils","nameLocation":"529:16:20","scope":6871,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":20}